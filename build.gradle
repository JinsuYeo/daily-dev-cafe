plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
	//querydsl 추가
//	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.jsyeo'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	asciidoctorExt
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
	implementation 'com.h2database:h2'
	implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-cache'

	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.ehcache:ehcache:3.10.0'
	implementation 'javax.cache:cache-api:1.1.1'

	// QueryDSL 설정
	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	// -- QueryDSL ---

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.rest-assured:rest-assured:5.3.1'
	testImplementation 'org.springframework.security:spring-security-test'

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

tasks.named('test') {
	useJUnitPlatform()
}

ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	outputs.dir snippetsDir
}

asciidoctor {
	configurations "asciidoctorExt"
	inputs.dir snippetsDir
	outputDir file('build/docs/asciidoc')
	dependsOn test
}

clean {
	delete file('src/main/generated')
}

bootJar {
	mainClass = 'com.jsyeo.dailydevcafe.DailydevcafeApplication'
	dependsOn asciidoctor
	copy {
		from asciidoctor.outputDir
		into "src/main/resources/static/docs"
	}
}

bootRun {
	String activeProfile = System.properties['spring.properties.active']
	systemProperty "spring.profiles.active", activeProfile
}

// Querydsl 설정부
//def generated = 'src/main/generated'
//
//querydsl {
//	jpa = true
//	querydslSourcesDir = generated
//}
//sourceSets {
//	main.java.srcDir generated
//}
//
//compileQuerydsl{
//	options.annotationProcessorPath = configurations.querydsl
//}
//
//configurations {
//	compileOnly {
//		extendsFrom annotationProcessor
//	}
//	querydsl.extendsFrom compileClasspath
//}
